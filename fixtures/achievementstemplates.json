[{"pk": 1, "model": "core.achievementtemplate", "fields": {"predicate": "def match(game, team, old_points):\r\n    team_change = team.longest_draw_streak()\r\n    if team_change >= old_points:\r\n            return True, team_change\r\n    return False, old_points", "name": "Longest draw streak", "icon": "achievements/1_gold_small_1.png"}}, {"pk": 2, "model": "core.achievementtemplate", "fields": {"predicate": "def match(game, team, old_points):\r\n    team_change = team.longest_losing_streak()\r\n    if team_change >= old_points:\r\n            return True, team_change\r\n    return False, old_points", "name": "Longest losing streak", "icon": "achievements/1_gold_small_2.png"}}, {"pk": 3, "model": "core.achievementtemplate", "fields": {"predicate": "def match(game, team, old_points):\r\n    team_change = team.longest_win_streak()\r\n    if team_change >= old_points:\r\n            return True, team_change\r\n    return False, old_points", "name": "Longest win streak", "icon": "achievements/1_gold_small_3.png"}}, {"pk": 6, "model": "core.achievementtemplate", "fields": {"predicate": "def match(game, team, old_points):\r\n    team_change = team.average_goals_conceded_per_game()\r\n    if team_change >= old_points:\r\n            return True, team_change\r\n    return False, old_points", "name": "Goals conceded per game", "icon": "achievements/1_gold_small_6.png"}}, {"pk": 7, "model": "core.achievementtemplate", "fields": {"predicate": "def match(game, team, old_points):\r\n    team_change = team.average_goals_per_game()\r\n    if team_change >= old_points:\r\n            return True, team_change\r\n    return False, old_points", "name": "Goals per game", "icon": "achievements/1_gold_small_7.png"}}, {"pk": 8, "model": "core.achievementtemplate", "fields": {"predicate": "def match(game, team, old_points):\r\n    team_change = team.count_games()\r\n    if team_change >= old_points:\r\n            return True, team_change\r\n    return False, old_points", "name": "Games played", "icon": "achievements/1_gold_small_8.png"}}, {"pk": 9, "model": "core.achievementtemplate", "fields": {"predicate": "def match(game, team, old_points):\r\n    team_change = game.points_set.get(team=team).get_change()\r\n    if team_change >= old_points:\r\n            return True, team_change\r\n    return False, old_points", "name": "Biggest point gain", "icon": "achievements/1_gold_small_9.png"}}, {"pk": 10, "model": "core.achievementtemplate", "fields": {"predicate": "def match(game, team, old_points):\r\n    if game.winner() == team:\r\n      if game.home_score - game.away_score >= old_points and game.home_team == team:\r\n          return True, (game.home_score-game.away_score)\r\n      elif game.away_score - game.home_score >= old_points and game.away_team == team:\r\n          return True, (game.away_score-game.away_score)\r\n    return False, old_points", "name": "Biggest win", "icon": "achievements/1_gold_small_10.png"}}]